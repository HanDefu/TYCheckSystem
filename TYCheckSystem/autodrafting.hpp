//==============================================================================
//  WARNING!!  This file is overwritten by the Block Styler while generating
//  the automation code. Any modifications to this file will be lost after
//  generating the code again.
//
//       Filename:  C:\codeguangzhou\install\application\autodrafting.hpp
//
//        This file was generated by the NX Block Styler
//        Created by: Administrator
//              Version: NX 10
//              Date: 03-18-2019  (Format: mm-dd-yyyy)
//              Time: 12:31
//
//==============================================================================

#ifndef AUTODRAFTING_H_INCLUDED
#define AUTODRAFTING_H_INCLUDED

//------------------------------------------------------------------------------
//These includes are needed for the following template code
//------------------------------------------------------------------------------
#include <uf_defs.h>
#include <uf_ui_types.h>
#include <uf_part.h>
#include <uf_draw.h>
#include <uf_view.h>
#include <uf_assem.h>
#include <uf_group.h>
#include <uf_vec.h>
#include <uf_csys.h>
#include <iostream>
#include <NXOpen/Session.hxx>
#include <NXOpen/UI.hxx>
#include <NXOpen/NXMessageBox.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXException.hxx>
#include <NXOpen/BlockStyler_UIBlock.hxx>
#include <NXOpen/BlockStyler_BlockDialog.hxx>
#include <NXOpen/BlockStyler_PropertyList.hxx>
#include <NXOpen/BlockStyler_Node.hxx>
#include <NXOpen/BlockStyler_Group.hxx>
#include <NXOpen/BlockStyler_StringBlock.hxx>
#include <NXOpen/BlockStyler_Enumeration.hxx>
#include <NXOpen/BlockStyler_MultilineString.hxx>
#include <NXOpen/BlockStyler_ScrolledWindow.hxx>
#include <NXOpen/BlockStyler_Tree.hxx>
#include <NXOpen/BlockStyler_BodyCollector.hxx>
#include <NXOpen/BlockStyler_DoubleBlock.hxx>
#include <NXOpen/BlockStyler_Button.hxx>
#include <NXOpen/BlockStyler_Toggle.hxx>
#include <NXOpen/BlockStyler_SpecifyCSYS.hxx>
#include <NXOpen/BlockStyler_DoubleBlock.hxx>
#include <NXOpen/BlockStyler_FolderSelection.hxx>
#include <NXOpen/NXObjectManager.hxx>
#include <NXOpen/Assemblies_Arrangement.hxx>
#include <NXOpen/Assemblies_ArrangementsBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Direction.hxx>
#include <NXOpen/Drafting_BaseEditSettingsBuilder.hxx>
#include <NXOpen/Drafting_SettingsManager.hxx>
#include <NXOpen/Drawings_BaseView.hxx>
#include <NXOpen/Drawings_DraftingViewCollection.hxx>
#include <NXOpen/Drawings_EditViewSettingsBuilder.hxx>
#include <NXOpen/Drawings_BaseViewBuilder.hxx>
#include <NXOpen/Drawings_DraftingView.hxx>
#include <NXOpen/Drawings_DraftingViewCollection.hxx>
#include <NXOpen/Drawings_DrawingSheet.hxx>
#include <NXOpen/Drawings_DrawingSheetCollection.hxx>
#include <NXOpen/Drawings_HiddenObjectsBuilder.hxx>
#include <NXOpen/Drawings_HingeLineBuilder.hxx>
#include <NXOpen/Drawings_OvtBuilder.hxx>
#include <NXOpen/Drawings_SelectDraftingView.hxx>
#include <NXOpen/Drawings_SelectModelViewBuilder.hxx>
#include <NXOpen/Drawings_ViewPlacementBuilder.hxx>
#include <NXOpen/Drawings_ViewScaleBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleBaseBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleDetailBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleGeneralBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleHiddenLinesBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleInheritPmiBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleOrientationBuilder.hxx>
#include <NXOpen/Drawings_ViewStylePerspectiveBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleProjectedBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleSectionBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleSectionConstraintsBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleShadingBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleSmoothEdgesBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleThreadsBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleTraceLinesBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleVirtualIntersectionsBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleVisibleLinesBuilder.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/FileNew.hxx>
#include <NXOpen/ModelingView.hxx>
#include <NXOpen/ModelingViewCollection.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/Part.hxx>
#include <NXOpen/PartCollection.hxx>
#include <NXOpen/SelectNXObject.hxx>
#include <NXOpen/SelectNXObjectList.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectTaggedObject.hxx>
#include <NXOpen/Session.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/Update.hxx>
#include <NXOpen/Assemblies_Arrangement.hxx>
#include <NXOpen/Assemblies_ArrangementsBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Direction.hxx>
#include <NXOpen/Drawings_BaseView.hxx>
#include <NXOpen/Drawings_BaseViewBuilder.hxx>
#include <NXOpen/Drawings_DraftingView.hxx>
#include <NXOpen/Drawings_DraftingViewCollection.hxx>
#include <NXOpen/Drawings_HiddenObjectsBuilder.hxx>
#include <NXOpen/Drawings_HingeLineBuilder.hxx>
#include <NXOpen/Drawings_OvtBuilder.hxx>
#include <NXOpen/Drawings_ParentViewBuilder.hxx>
#include <NXOpen/Drawings_ProjectedViewBuilder.hxx>
#include <NXOpen/Drawings_SelectDraftingView.hxx>
#include <NXOpen/Drawings_SelectModelViewBuilder.hxx>
#include <NXOpen/Drawings_ViewPlacementBuilder.hxx>
#include <NXOpen/Drawings_ViewScaleBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleBaseBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleDetailBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleGeneralBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleHiddenLinesBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleInheritPmiBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleOrientationBuilder.hxx>
#include <NXOpen/Drawings_ViewStylePerspectiveBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleProjectedBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleSectionBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleSectionConstraintsBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleShadingBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleSmoothEdgesBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleThreadsBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleTraceLinesBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleVirtualIntersectionsBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleVisibleLinesBuilder.hxx>

#include <NXOpen/Drawings_ProjectedView.hxx>
#include <NXOpen/Drawings_ProjectedViewBuilder.hxx>
#include <NXOpen/Drawings_ProjectedViewOrientationBuilder.hxx>
#include <NXOpen/View.hxx>
#include <NXOpen/ViewCollection.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Drawings_DrawingSheet.hxx>
#include <NXOpen/Drawings_DrawingSheetBuilder.hxx>
#include <NXOpen/Drawings_DrawingSheetCollection.hxx>
#include <NXOpen/Direction.hxx>
#include <NXOpen/DirectionCollection.hxx>

#include <NXOpen/Annotations_AnnotationManager.hxx>
#include <NXOpen/Annotations_DimensionStyleBuilder.hxx>
#include <NXOpen/Annotations_DraftingNoteBuilder.hxx>
#include <NXOpen/Annotations_HatchStyleBuilder.hxx>
#include <NXOpen/Annotations_Label.hxx>
#include <NXOpen/Annotations_Annotation.hxx>
#include <NXOpen/Annotations_AnnotationManager.hxx>
#include <NXOpen/Annotations_IdSymbol.hxx>
#include <NXOpen/Annotations_IdSymbolBuilder.hxx>
#include <NXOpen/Annotations_IdSymbolCollection.hxx>
#include <NXOpen/Annotations_LeaderBuilder.hxx>
#include <NXOpen/Annotations_LeaderData.hxx>
#include <NXOpen/Annotations_LeaderDataList.hxx>
#include <NXOpen/Annotations_LetteringPreferences.hxx>
#include <NXOpen/Annotations_LineAndArrowPreferences.hxx>
#include <NXOpen/Annotations_Note.hxx>
#include <NXOpen/Annotations_OrdinateStyleBuilder.hxx>
#include <NXOpen/Annotations_OriginBuilder.hxx>
#include <NXOpen/Annotations_OrdinateStyleBuilder.hxx>
#include <NXOpen/Annotations_PlaneBuilder.hxx>
#include <NXOpen/Annotations_RadialStyleBuilder.hxx>
#include <NXOpen/Annotations_StyleBuilder.hxx>
#include <NXOpen/Annotations_SymbolPreferences.hxx>
#include <NXOpen/Annotations_SymbolStyleBuilder.hxx>
#include <NXOpen/Annotations_TextWithEditControlsBuilder.hxx>
#include <NXOpen/Annotations_TextWithSymbolsBuilder.hxx>
#include <NXOpen/Annotations_UnitsStyleBuilder.hxx>
#include <NXOpen/SelectDisplayableObject.hxx>
#include <NXOpen/SelectDisplayableObjectList.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/Point.hxx>
#include <NXOpen/PointCollection.hxx>
#include <NXOpen/Annotations_Annotation.hxx>
#include <NXOpen/Annotations_AnnotationManager.hxx>
#include <NXOpen/Annotations_AppendedTextBuilder.hxx>
#include <NXOpen/Annotations_BaseRapidDimensionBuilder.hxx>
#include <NXOpen/Annotations_BreakSettingsBuilder.hxx>
#include <NXOpen/Annotations_CenterMark.hxx>
#include <NXOpen/Annotations_CenterlineCollection.hxx>
#include <NXOpen/Annotations_DimensionCollection.hxx>
#include <NXOpen/Annotations_DimensionMeasurementBuilder.hxx>
#include <NXOpen/Annotations_DimensionStyleBuilder.hxx>
#include <NXOpen/Annotations_DrivingValueBuilder.hxx>
#include <NXOpen/Annotations_ForeshorteningSymbolBuilder.hxx>
#include <NXOpen/Annotations_ForeshorteningSymbolSettingsBuilder.hxx>
#include <NXOpen/Annotations_FrameBarElementStyleBuilder.hxx>
#include <NXOpen/Annotations_FrameBarStyleBuilder.hxx>
#include <NXOpen/Annotations_HatchStyleBuilder.hxx>
#include <NXOpen/Annotations_HoleCalloutSettingsBuilder.hxx>
#include <NXOpen/Annotations_LetteringStyleBuilder.hxx>
#include <NXOpen/Annotations_LineArrowStyleBuilder.hxx>
#include <NXOpen/Annotations_OrdinateStyleBuilder.hxx>
#include <NXOpen/Annotations_OriginBuilder.hxx>
#include <NXOpen/Annotations_PlaneBuilder.hxx>
#include <NXOpen/Annotations_RadialStyleBuilder.hxx>
#include <NXOpen/Annotations_RapidDimensionBuilder.hxx>
#include <NXOpen/Annotations_SingleSidedDisplayBuilder.hxx>
#include <NXOpen/Annotations_StyleBuilder.hxx>
#include <NXOpen/Annotations_SymbolStyleBuilder.hxx>
#include <NXOpen/Annotations_UnitsStyleBuilder.hxx>
#include <NXOpen/Assemblies_Component.hxx>
#include <NXOpen/Assemblies_ComponentAssembly.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Direction.hxx>
#include <NXOpen/DisplayableObject.hxx>
#include <NXOpen/Drawings_BaseView.hxx>
#include <NXOpen/Drawings_DraftingBody.hxx>
#include <NXOpen/Drawings_DraftingBodyCollection.hxx>
#include <NXOpen/Drawings_DraftingCurve.hxx>
#include <NXOpen/Drawings_DraftingCurveCollection.hxx>
#include <NXOpen/Drawings_DraftingView.hxx>
#include <NXOpen/Drawings_DraftingViewCollection.hxx>
#include <NXOpen/Drawings_SelectDraftingView.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/InferSnapType.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/Part.hxx>
#include <NXOpen/PartCollection.hxx>
#include <NXOpen/SelectDisplayableObject.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/Session.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/View.hxx>
#include <NXOpen/ViewCollection.hxx>
#include <NXOpen/Xform.hxx>
#include <NXOpen/DexManager.hxx>
#include <NXOpen/DxfdwgCreator.hxx>
#include <NXOpen/NXMatrix.hxx>
#include <NXOpen/NXMatrixCollection.hxx>
#include <NXOpen/CoordinateSystem.hxx>
#include <NXOpen/CoordinateSystemCollection.hxx>
#include "Common_Function.h"
#include "Common_Function_UG.h"
#include "Excel/BasicExcel.hpp"
using namespace YExcel;
//------------------------------------------------------------------------------
// Namespaces needed for following template
//------------------------------------------------------------------------------
using namespace std;
using namespace NXOpen;
using namespace NXOpen::BlockStyler;

#define ATTR_DRAFTING_NORMAL_DIR_X "ATTR_DRAFTING_NORMAL_DIR_X"
#define ATTR_DRAFTING_NORMAL_DIR_Y "ATTR_DRAFTING_NORMAL_DIR_Y"
#define ATTR_DRAFTING_NORMAL_DIR_Z "ATTR_DRAFTING_NORMAL_DIR_Z"

#define ATTR_DRAFTING_X_DIR_X "ATTR_DRAFTING_X_DIR_X"
#define ATTR_DRAFTING_X_DIR_Y "ATTR_DRAFTING_X_DIR_Y"
#define ATTR_DRAFTING_X_DIR_Z "ATTR_DRAFTING_X_DIR_Z"

typedef std::vector<tag_t> StlTagVector;
typedef std::vector<double> StlDoubVector;
typedef std::vector<NXString> StlNXStringVector;
typedef std::vector<StlNXStringVector> VecNXStringVector;

class DrawingBody
{
    public:
        NXString DrawingNO;
        //StlTagVector bodies;
        StlNXStringVector tech;
        NXString type;
        NXString DrawingName;
        DrawingBody()
        {
        }
        ~DrawingBody()
        {
        }
        
};
typedef std::vector<DrawingBody> StlDrawingBodyVector;

class DllExport autodrafting
{
    // class members
public:
    static Session *theSession;
    static UI *theUI;
    autodrafting();
    ~autodrafting();
    int Show();
    
    //----------------------- BlockStyler Callback Prototypes ---------------------
    // The following member function prototypes define the callbacks 
    // specified in your BlockStyler dialog.  The empty implementation
    // of these prototypes is provided in the autodrafting.cpp file. 
    // You are REQUIRED to write the implementation for these functions.
    //------------------------------------------------------------------------------
    void initialize_cb();
    void dialogShown_cb();
    //int apply_cb();
    int ok_cb();
    int cancel_cb();
    bool enableOKButton_cb();
    int update_cb(NXOpen::BlockStyler::UIBlock* block);
    PropertyList* GetBlockProperties(const char *blockID);
    void SetTypeUI();
    void ReadExcelTechData( );
    void AddBodyInformation( );
    int ValidateDrawingNO( );
    int GZ_SetDrawingNoteInformation( tag_t part, tag_t group,double scale,NXString& DrawingNO);
    //void OnExpandCallback (NXOpen::BlockStyler::Tree *tree, NXOpen::BlockStyler::Node *node);
    //void OnInsertColumnCallback(NXOpen::BlockStyler::Tree *tree, NXOpen::BlockStyler::Node *node, int columnID);
    //void OnInsertNodeCallback(NXOpen::BlockStyler::Tree *tree, NXOpen::BlockStyler::Node *node);
    //void OnDeleteNodeCallback(NXOpen::BlockStyler::Tree *tree, NXOpen::BlockStyler::Node *node);
    //void OnPreSelectCallback(NXOpen::BlockStyler::Tree *tree, NXOpen::BlockStyler::Node *node, int ID, bool selected);
    void OnSelectCallback(NXOpen::BlockStyler::Tree *tree, NXOpen::BlockStyler::Node *, int columnID, bool selected);
    //void OnStateChangeCallback(NXOpen::BlockStyler::Tree *tree, NXOpen::BlockStyler::Node *node, int state);
    //NXString ToolTipTextCallback(NXOpen::BlockStyler::Tree *tree, NXOpen::BlockStyler::Node *node, int columnID);
    //int ColumnSortCallback(NXOpen::BlockStyler::Tree *tree, int columnID, NXOpen::BlockStyler::Node *node1, NXOpen::BlockStyler::Node *node2);
    //NXString StateIconNameCallback(NXOpen::BlockStyler::Tree *tree, NXOpen::BlockStyler::Node *node, int state);
    //NXOpen::BlockStyler::Tree::BeginLabelEditState OnBeginLabelEditCallback(NXOpen::BlockStyler::Tree *tree, NXOpen::BlockStyler::Node *node, int columnID);
    //NXOpen::BlockStyler::Tree::EndLabelEditState OnEndLabelEditCallback(NXOpen::BlockStyler::Tree *tree, NXOpen::BlockStyler::Node *node, int, NXString editedText);
    //NXOpen::BlockStyler::Tree::EditControlOption OnEditOptionSelectedCallback(NXOpen::BlockStyler::Tree *tree, NXOpen::BlockStyler::Node *node, int columnID, int selectedOptionID, NXString selectedOptionText, NXOpen::BlockStyler::Tree::ControlType type);
    //NXOpen::BlockStyler::Tree::ControlType AskEditControlCallback(NXOpen::BlockStyler::Tree *tree, NXOpen::BlockStyler::Node *node, int columnID);
    //void OnMenuCallback(NXOpen::BlockStyler::Tree *tree, NXOpen::BlockStyler::Node *node, int columnID );
    //void OnMenuSelectionCallback(NXOpen::BlockStyler::Tree *tree, NXOpen::BlockStyler::Node *node, int menuItemID);
    //NXOpen::BlockStyler::Node::DropType IsDropAllowedCallback(NXOpen::BlockStyler::Tree *tree, NXOpen::BlockStyler::Node *node, int columnID, NXOpen::BlockStyler::Node *targetNode, int targetColumnID);
    //NXOpen::BlockStyler::Node::DragType IsDragAllowedCallback(NXOpen::BlockStyler::Tree *tree, NXOpen::BlockStyler::Node *node, int columnID);
    //bool OnDropCallback(NXOpen::BlockStyler::Tree *tree, std::vector<NXOpen::BlockStyler::Node *> node, int columnID, NXOpen::BlockStyler::Node *targetNode, int targetColumnID, NXOpen::BlockStyler::Node::DropType dropType, int dropMenuItemId);
    //void OnDropMenuCallback(NXOpen::BlockStyler::Tree *tree, NXOpen::BlockStyler::Node *node, int columnID, NXOpen::BlockStyler::Node *targetNode, int targetColumnID);
    //void OnDefaultAction(NXOpen::BlockStyler::Tree *tree, NXOpen::BlockStyler::Node *node, int columnID);
private:
    const char* theDlxFileName;
    NXOpen::BlockStyler::BlockDialog* theDialog;
    NXOpen::BlockStyler::Group* group1;// Block type: Group
    NXOpen::BlockStyler::StringBlock* projectName;// Block type: String
    NXOpen::BlockStyler::StringBlock* projectNO;// Block type: String
    NXOpen::BlockStyler::StringBlock* drawingName;// Block type: String
    NXOpen::BlockStyler::StringBlock* drawingNO;// Block type: String
    NXOpen::BlockStyler::StringBlock* DesignDate;// Block type: String
    NXOpen::BlockStyler::Enumeration* enumType;// Block type: Enumeration
    NXOpen::BlockStyler::MultilineString* multiline_string0;// Block type: Multiline String
    NXOpen::BlockStyler::ScrolledWindow* scrolledWindow;// Block type: Scrolled Window
    NXOpen::BlockStyler::Tree* tree_control0;// Block type: Tree Control
    NXOpen::BlockStyler::SpecifyCSYS* coord_system0;// Block type: Specify Csys
    NXOpen::BlockStyler::Button* buttonApplyCSYS;// Block type: Button
    NXOpen::BlockStyler::Button* buttonDelete;// Block type: Button
    NXOpen::BlockStyler::Group* group;// Block type: Group
    NXOpen::BlockStyler::BodyCollector* bodySelect0;// Block type: Body Collector
    NXOpen::BlockStyler::Enumeration* enumFrameType;// Block type: Enumeration
    NXOpen::BlockStyler::Toggle* toggleHide;// Block type: Toggle
    NXOpen::BlockStyler::DoubleBlock* doubleDwgScale;// Block type: Double
    NXOpen::BlockStyler::FolderSelection* nativeFolderBrowser01;// Block type: NativeFolderBrowser
    int CreateUITree( StlTagVector& boies,logical insertCol );
    void ReadExcelConfigData( );
    StlNXStringVector sheetNames;
    StlDrawingBodyVector BodiesDefined;
};

void GZ_PART_DRAFT_Main();
#endif //AUTODRAFTING_H_INCLUDED
