//==============================================================================
//  WARNING!!  This file is overwritten by the Block Styler while generating
//  the automation code. Any modifications to this file will be lost after
//  generating the code again.
//
//       Filename:  E:\Project\WetTang\Src\WeiTang\install\application\TYBaiWeiXian.cpp
//
//        This file was generated by the NX Block Styler
//        Created by: Administrator
//              Version: NX 7
//              Date: 07-28-2019  (Format: mm-dd-yyyy)
//              Time: 18:55 (Format: hh-mm)
//
//==============================================================================

//==============================================================================
//  Purpose:  This TEMPLATE file contains C++ source to guide you in the
//  construction of your Block application dialog. The generation of your
//  dialog file (.dlx extension) is the first step towards dialog construction
//  within NX.  You must now create a NX Open application that
//  utilizes this file (.dlx).
//
//  The information in this file provides you with the following:
//
//  1.  Help on how to load and display your Block Styler dialog in NX
//      using APIs provided in NXOpen.BlockStyler namespace
//  2.  The empty callback methods (stubs) associated with your dialog items
//      have also been placed in this file. These empty methods have been
//      created simply to start you along with your coding requirements.
//      The method name, argument list and possible return values have already
//      been provided for you.
//==============================================================================

//------------------------------------------------------------------------------
//These includes are needed for the following template code
//------------------------------------------------------------------------------
#include "TYBaiWeiXian.hpp"
using namespace NXOpen;
using namespace NXOpen::BlockStyler;

//------------------------------------------------------------------------------
// Initialize static variables
//------------------------------------------------------------------------------
Session *(TYBaiWeiXian::theSession) = NULL;
UI *(TYBaiWeiXian::theUI) = NULL;

//------------------------------------------------------------------------------
// Declaration of global variables
//------------------------------------------------------------------------------
TYBaiWeiXian *theTYBaiWeiXian;
//------------------------------------------------------------------------------
// Constructor for NX Styler class
//------------------------------------------------------------------------------
TYBaiWeiXian::TYBaiWeiXian()
{
	try
	{
		// Initialize the NX Open C++ API environment
		TYBaiWeiXian::theSession = NXOpen::Session::GetSession();
		TYBaiWeiXian::theUI = UI::GetUI();
		theDialogName = "TYBaiWeiXian.dlx";
		theDialog = TYBaiWeiXian::theUI->CreateDialog(theDialogName.c_str());
		// Registration of callback functions
		theDialog->AddApplyHandler(make_callback(this, &TYBaiWeiXian::apply_cb));
		theDialog->AddOkHandler(make_callback(this, &TYBaiWeiXian::ok_cb));
		theDialog->AddUpdateHandler(make_callback(this, &TYBaiWeiXian::update_cb));
		theDialog->AddCancelHandler(make_callback(this, &TYBaiWeiXian::cancel_cb));
		theDialog->AddFilterHandler(make_callback(this, &TYBaiWeiXian::filter_cb));
		theDialog->AddInitializeHandler(make_callback(this, &TYBaiWeiXian::initialize_cb));
		theDialog->AddDialogShownHandler(make_callback(this, &TYBaiWeiXian::dialogShown_cb));
	}
	catch(exception& ex)
	{
		//---- Enter your exception handling code here -----
		throw;
	}
}

//------------------------------------------------------------------------------
// Destructor for NX Styler class
//------------------------------------------------------------------------------
TYBaiWeiXian::~TYBaiWeiXian()
{
	if (theDialog != NULL)
	{
		delete theDialog;
		theDialog = NULL;
	}
}

int TYBaiWeiXian::Show()
{
	try
	{
		theDialog->Show();
	}
	catch(exception& ex)
	{
		//---- Enter your exception handling code here -----
		TYBaiWeiXian::theUI->NXMessageBox()->Show("Block Styler", NXOpen::NXMessageBox::DialogTypeError, ex.what());
	}
	return 0;
}


//------------------------------------------------------------------------------
//Method name: Show_TYBaiWeiXian
//------------------------------------------------------------------------------
void TYBaiWeiXian::Show_TYBaiWeiXian()
{
	try
	{
		theTYBaiWeiXian = new TYBaiWeiXian();
		// The following method shows the dialog immediately
		theTYBaiWeiXian->Show();
	}
	catch(exception& ex)
	{
		//---- Enter your exception handling code here -----
		TYBaiWeiXian::theUI->NXMessageBox()->Show("Block Styler", NXOpen::NXMessageBox::DialogTypeError, ex.what());
	}
	delete theTYBaiWeiXian;
}

//------------------------------------------------------------------------------
//---------------------Block Styler Callback Functions--------------------------
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
//Callback Name: initialize_cb
//------------------------------------------------------------------------------
void TYBaiWeiXian::initialize_cb()
{
	try
	{
		groupSelect = theDialog->TopBlock()->FindBlock("groupSelect");
		edgeX = theDialog->TopBlock()->FindBlock("edgeX");
		edgeY = theDialog->TopBlock()->FindBlock("edgeY");
		pointOrigin = theDialog->TopBlock()->FindBlock("pointOrigin");
		groupSetting = theDialog->TopBlock()->FindBlock("groupSetting");
		enumDist = theDialog->TopBlock()->FindBlock("enumDist");
		enumStartXMaxDist = theDialog->TopBlock()->FindBlock("enumStartXMaxDist");
		enumStartYMaxDist = theDialog->TopBlock()->FindBlock("enumStartYMaxDist");
		enumTextHeight = theDialog->TopBlock()->FindBlock("enumTextHeight");
		toggleYX = theDialog->TopBlock()->FindBlock("toggleYX");
	}
	catch(exception& ex)
	{
		//---- Enter your exception handling code here -----
		TYBaiWeiXian::theUI->NXMessageBox()->Show("Block Styler", NXOpen::NXMessageBox::DialogTypeError, ex.what());
	}
}

//------------------------------------------------------------------------------
//Callback Name: dialogShown_cb
//This callback is executed just before the dialog launch. Thus any value set 
//here will take precedence and dialog will be launched showing that value. 
//------------------------------------------------------------------------------
void TYBaiWeiXian::dialogShown_cb()
{
	try
	{
		//---- Enter your callback code here -----
	}
	catch(exception& ex)
	{
		//---- Enter your exception handling code here -----
		TYBaiWeiXian::theUI->NXMessageBox()->Show("Block Styler", NXOpen::NXMessageBox::DialogTypeError, ex.what());
	}
}

//------------------------------------------------------------------------------
//Callback Name: apply_cb
//------------------------------------------------------------------------------
int TYBaiWeiXian::apply_cb()
{
	try
	{
		//---- Enter your callback code here -----
	}
	catch(exception& ex)
	{
		//---- Enter your exception handling code here -----
		TYBaiWeiXian::theUI->NXMessageBox()->Show("Block Styler", NXOpen::NXMessageBox::DialogTypeError, ex.what());
	}
	return 0;
}

//------------------------------------------------------------------------------
//Callback Name: update_cb
//------------------------------------------------------------------------------
int TYBaiWeiXian::update_cb(NXOpen::BlockStyler::UIBlock* block)
{
	try
	{
		if(block == edgeX)
		{
			//---------Enter your code here-----------
		}
		else if(block == edgeY)
		{
			//---------Enter your code here-----------
		}
		else if(block == pointOrigin)
		{
			//---------Enter your code here-----------
		}
		else if(block == enumDist)
		{
			//---------Enter your code here-----------
		}
		else if(block == enumStartXMaxDist)
		{
			//---------Enter your code here-----------
		}
		else if(block == enumStartYMaxDist)
		{
			//---------Enter your code here-----------
		}
		else if(block == enumTextHeight)
		{
			//---------Enter your code here-----------
		}
		else if(block == toggleYX)
		{
			//---------Enter your code here-----------
		}
	}
	catch(exception& ex)
	{
		//---- Enter your exception handling code here -----
		TYBaiWeiXian::theUI->NXMessageBox()->Show("Block Styler", NXOpen::NXMessageBox::DialogTypeError, ex.what());
	}
	return 0;
}

//------------------------------------------------------------------------------
//Callback Name: ok_cb
//------------------------------------------------------------------------------
int TYBaiWeiXian::ok_cb()
{
	try
	{
		apply_cb();
	}
	catch(exception& ex)
	{
		//---- Enter your exception handling code here -----
		TYBaiWeiXian::theUI->NXMessageBox()->Show("Block Styler", NXOpen::NXMessageBox::DialogTypeError, ex.what());
	}
	return 0;
}

//------------------------------------------------------------------------------
//Callback Name: cancel_Cb
//------------------------------------------------------------------------------
int TYBaiWeiXian::cancel_cb()
{
	try
	{
		//---- Enter your callback code here -----
	}
	catch(exception& ex)
	{
		//---- Enter your exception handling code here -----
		TYBaiWeiXian::theUI->NXMessageBox()->Show("Block Styler", NXOpen::NXMessageBox::DialogTypeError, ex.what());
	}
	return 0;
}

//------------------------------------------------------------------------------
//Callback Name: filter_cb
//------------------------------------------------------------------------------
int TYBaiWeiXian::filter_cb(NXOpen::BlockStyler::UIBlock*  block, NXOpen::TaggedObject* selectObject)
{
	return(UF_UI_SEL_ACCEPT);
}
